"""
Django settings for cms_project project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os # Ensure os is imported at the top

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-%qtmijf8v7__$w*0op7f_#ft182oi)szp6-nmy+*u33cgvg=l=')

# SECURITY WARNING: don't run with debug turned on in production!
# IMPORTANT: Set DEBUG to False in production
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True'


# IMPORTANT: Add your Render.com hostname to ALLOWED_HOSTS
ALLOWED_HOSTS = ['crew-management-project.onrender.com', '127.0.0.1', 'localhost']
# Add any custom domains here if you use them on Render:
# ALLOWED_HOSTS = ['.yourcustomdomain.com', 'crew-management-project.onrender.com', '127.0.0.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crew_management',
    'users',
    # Removed 'django_render_auth' as it is not a valid package
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # Add WhiteNoise middleware immediately after SecurityMiddleware
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Removed 'django_render_auth.middleware.CurrentUserMiddleware'
]

ROOT_URLCONF = 'cms_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], # Your template directories can be added here if not using APP_DIRS
        'APP_DIRS': True, # This tells Django to look for 'templates' folder inside each app
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug', # Added for debug
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media', # Added for media files
            ],
        },
    },
]

WSGI_APPLICATION = 'cms_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# IMPORTANT: Use PostgreSQL for Render production, SQLite for local dev
import dj_database_url

DATABASES = {
    'default': dj_database_url.config(
        default='sqlite:///db.sqlite3',
        conn_max_age=600
    )
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') # This collects all static files for deployment

# Add this if it's not already there, for finding static files within apps
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'crew_management', 'static'), # Looks for static files in your app's static folder
]

# WhiteNoise configuration for compressed and cached static files
# This should be after STATIC_ROOT and STATICFILES_DIRS
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media files (for uploaded user content like profile pictures, documents)
# import os # This line was already there in your provided settings.py snippet

# Authentication settings
LOGIN_REDIRECT_URL = 'dashboard' # Name of the URL pattern to redirect to after successful login
LOGOUT_REDIRECT_URL = 'login'    # Name of the URL pattern to redirect to after logout (we'll define this later)
LOGIN_URL = 'login'              # Name of the URL pattern for the login page

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Security settings for production (if not already set)
# CSRF_COOKIE_SECURE = True
# SESSION_COOKIE_SECURE = True
# SECURE_SSL_REDIRECT = True
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SECURE_HSTS_SECONDS = 31536000 # 1 year
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True

# Render.com Environment Variable for Django Debug
# If using Render environment variables, ensure DJANGO_DEBUG is set to 'False' on Render
# and 'True' locally (or removed locally to default to True).
